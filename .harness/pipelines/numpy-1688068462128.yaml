pipeline:
  identifier: Build_numpy_1688068824251
  name: Build numpy
  orgIdentifier: migrate_demo
  projectIdentifier: example
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Jim_Sheldon_GitHub
        repoName: jimsheldon/numpy
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: checkskip
                  name: Check-skip
                  spec:
                    connectorRef: account.Jim_Sheldon
                    image: cimg/python:3.9
                    shell: Bash
                    command: |
                      export git_log=$(git log --max-count=1 --pretty=format:"%B" | tr "\n" " ")
                      echo "Got commit message:"
                      echo "${git_log}"
                      if [[ -v CIRCLE_PULL_REQUEST ]] && \
                         ([[ "$git_log" == *"[skip circle]"* ]] || \
                          [[ "$git_log" == *"[circle skip]"* ]])
                      then
                        echo "Skip detected, exiting job ${CIRCLE_JOB} for PR ${CIRCLE_PULL_REQUEST}."
                        circleci-agent step halt;
                      fi
                  timeout: ""
                  type: Run
              - step:
                  identifier: pullchangesfrommerge
                  name: pull changes from merge
                  spec:
                    connectorRef: account.Jim_Sheldon
                    image: cimg/python:3.9
                    shell: Bash
                    command: |
                      if [[ -v CI_PULL_REQUEST ]] ; then git pull --ff-only origin "refs/pull/${CI_PULL_REQUEST//*pull\//}/merge" ; fi
                  timeout: ""
                  type: Run
              - step:
                  identifier: updatesubmodules
                  name: update submodules
                  spec:
                    connectorRef: account.Jim_Sheldon
                    image: cimg/python:3.9
                    shell: Sh
                    command: |
                      git submodule init
                      git submodule update
                  timeout: ""
                  type: Run
              - step:
                  identifier: createvirtualenvironmentinstalldependencies
                  name: create virtual environment install dependencies
                  spec:
                    command: |
                      sudo apt-get update
                      #sudo apt-get install -y python3.9 python3.9-dev python3-venv graphviz texlive-fonts-recommended texlive-latex-recommended \
                      sudo apt-get install -y graphviz texlive-fonts-recommended texlive-latex-recommended \
                        texlive-latex-extra latexmk texlive-xetex texlive-lang-chinese doxygen
                      python3.9 -m venv venv
                      . venv/bin/activate
                    image: cimg/python:3.9
                  timeout: ""
                  type: Run
              - step:
                  identifier: buildnumpy
                  name: build numpy
                  spec:
                    command: |
                      . venv/bin/activate
                      pip install --progress-bar=off -r test_requirements.txt
                      pip install --progress-bar=off -r doc_requirements.txt
                      pip install .
                    image: cimg/python:3.9
                  timeout: ""
                  type: Run
              - step:
                  identifier: createreleasenotes
                  name: create release notes
                  spec:
                    command: |
                      . venv/bin/activate
                      VERSION=$(python -c "import setup; print(setup.VERSION)")
                      towncrier build --version $VERSION --yes
                      ./tools/ci/test_all_newsfragments_used.py
                    image: cimg/python:3.9
                  timeout: ""
                  type: Run
              - step:
                  identifier: rundoctestsondocumentation
                  name: run doctests on documentation
                  spec:
                    command: |
                      . venv/bin/activate
                      (cd doc ; git submodule update --init)
                      python tools/refguide_check.py --rst
                    image: cimg/python:3.9
                  timeout: ""
                  type: Run
              - step:
                  identifier: builddevdocswrefwarnings
                  name: build devdocs wref warnings
                  spec:
                    command: |
                      . venv/bin/activate
                      cd doc
                      # Don't use -q, show warning summary"
                      SPHINXOPTS="-j2 -n" make -e html || echo "ignoring errors for now, see gh-13114"
                      if [[ $(find build/html -type f | wc -l) -lt 1000 ]]; then
                          echo "doc build failed: build/html is empty"
                          exit -1
                      fi
                    image: cimg/python:3.9
                  timeout: ""
                  type: Run
              - step:
                  identifier: buildneps
                  name: build neps
                  spec:
                    command: |
                      . venv/bin/activate
                      cd doc/neps
                      SPHINXOPTS="-j2 -q" make -e html
                    image: cimg/python:3.9
                  timeout: ""
                  type: Run
              - step:
                  identifier: storeartifacts
                  name: store_artifacts
                  spec:
                    image: plugins/s3
                    settings:
                      access_key: <+ secrets.getValue("aws_access_key_id") >
                      bucket: <+ secrets.getValue("aws_bucket") >
                      region: <+ secrets.getValue("aws_region") >
                      secret_key: <+ secrets.getValue("aws_secret_access_key") >
                      source: doc/build/html/
                      target: /
                  timeout: ""
                  type: Plugin
              - step:
                  identifier: storeartifacts1
                  name: store_artifacts1
                  spec:
                    image: plugins/s3
                    settings:
                      access_key: <+ secrets.getValue("aws_access_key_id") >
                      bucket: <+ secrets.getValue("aws_bucket") >
                      region: <+ secrets.getValue("aws_region") >
                      secret_key: <+ secrets.getValue("aws_secret_access_key") >
                      source: doc/neps/_build/html/
                      target: /
                  timeout: ""
                  type: Plugin
          platform:
            arch: Amd64
            os: Linux
          runtime:
            spec: {}
            type: Cloud
        type: CI
    - stage:
        identifier: deploy
        name: deploy
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: addsshkeys
                  name: add_ssh_keys
                  spec:
                    command: echo unable to convert add_ssh_keys step
                  timeout: ""
                  type: Run
              - step:
                  identifier: deploydevdocs
                  name: deploy devdocs
                  spec:
                    command: |
                      touch doc/build/html/.nojekyll

                      ./tools/ci/push_docs_to_repo.py doc/build/html \
                          --committer "numpy-circleci-bot" \
                          --email "numpy-circleci-bot@nomail" \
                          --message "Docs build of $CIRCLE_SHA1" \
                          --count 5 \
                          --force \
                          git@github.com:numpy/devdocs.git
                    image: cimg/python:3.9
                  timeout: ""
                  type: Run
              - step:
                  identifier: addsshkeys1
                  name: add_ssh_keys1
                  spec:
                    command: echo unable to convert add_ssh_keys step
                  timeout: ""
                  type: Run
              - step:
                  identifier: selectsshkeyfornepsrepo
                  name: select SSH key for neps repo
                  spec:
                    command: |
                      cat \<<\EOF > ~/.ssh/config
                      Host github.com
                        IdentitiesOnly yes
                        IdentityFile /home/circleci/.ssh/id_rsa_df8bfb342d387d49fc1be8444fbd2c0e
                      EOF
                    image: cimg/python:3.9
                  timeout: ""
                  type: Run
              - step:
                  identifier: deployneps
                  name: deploy neps
                  spec:
                    command: |
                      touch doc/neps/_build/html/.nojekyll

                      ./tools/ci/push_docs_to_repo.py doc/neps/_build/html \
                          --committer "numpy-circleci-bot" \
                          --email "numpy-circleci-bot@nomail" \
                          --message "Docs build of $CIRCLE_SHA1" \
                          --count 5 \
                          --force \
                          git@github.com:numpy/neps.git \
                    image: cimg/python:3.9
                  timeout: ""
                  type: Run
          platform:
            arch: Amd64
            os: Linux
          runtime:
            spec: {}
            type: Cloud
        type: CI
